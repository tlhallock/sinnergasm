syntax = "proto3";

package sinnergasm;

service VirtualWorkspaces {
  rpc CreateWorkspace(CreateRequest) returns (CreatedResponse);
  rpc ListWorkspaces(ListRequest) returns (WorkspaceList);
  rpc GetWorkspace(GetRequest) returns (Workspace);
  rpc DeleteWorkspace(DeleteRequest) returns (DeleteResponse);

  rpc ConfigureWorkspace(ConfigurationRequest) returns (ConfiguredResponse);

  rpc TargetDevice(TargetRequest) returns (TargetResponse);

  rpc ControlWorkspace(stream ControlRequest) returns (ControlResponse);

  rpc SimulateWorkspace(SimulateRequest) returns (stream SimulationEvent);
  rpc CancelSimulation(CancelSimulationRequest) returns (CancelSimulationResponse);

  rpc SubscribeToWorkspace(WorkspaceSubscriptionRequest) returns (stream WorkspaceEvent);
  rpc CancelSubscription(CancelSubscriptionRequest) returns (CancelSubscriptionResponse);
}

//////////////////////
// Create
//////////////////////
message CreateRequest {
  string workspace = 1;
}

message CreatedResponse {

}

//////////////////////
// List
//////////////////////
message ListRequest {
}

message WorkspaceList {
  repeated WorkspaceSummary workspaces = 1;
}

message WorkspaceSummary {
  string workspace = 1;
  uint32 number_of_monitors = 2;
  uint32 devices = 3;
}

//////////////////////
// Get
//////////////////////
message GetRequest {
  string name = 1;
}

message Workspace {
  string name = 1;
  string controller = 2;
  string target = 3;
  repeated Device devices = 4;
  repeated Monitor monitors = 5;
}

message Monitor {
  string name = 1;
  uint32 x = 2;
  uint32 y = 3;
  uint32 w = 4;
  uint32 h = 5;
  string device = 6;
}

message Device {
  string name = 1;
  bool controller = 2;
}

//////////////////////
// Delete
//////////////////////

message DeleteRequest {
  string workspace = 1;
}

message DeleteResponse {

}


//////////////////////
// Configure
//////////////////////

message ConfigurationRequest {

}

message ConfiguredResponse {

}

//////////////////////
// Target
//////////////////////

message TargetRequest {
  string workspace = 1;
  string device = 3;
  string clipboard = 4;
}

message TargetResponse {

}

//////////////////////
// Join
//////////////////////

message JoinRequest {
  string workspace = 1;
  string device = 3;
  repeated string monitors = 4;
}

message JoinResponse {

}

//////////////////////
// Leave
//////////////////////

message LeaveRequest {
  string workspace = 1;
  string device = 3;
}

message LeaveResponse {

}

//////////////////////
// Control
//////////////////////

message ControlRequest {
  // TODO: oneof where one is an
  UserInputEvent input_event = 1;
}

message ControlResponse {

}

message ConfigurationUpdate {
  Workspace workspace = 1;
}


//////////////////////
// Subscription
//////////////////////

message WorkspaceSubscriptionRequest {
  string workspace = 1;
  string device = 2;
}

message WorkspaceEvent {
  oneof event_type {
    ConfigurationUpdate configuration_update = 1;
    TargetUpdate target_update = 2;
    DeviceConnected device_connected = 3;
    DeviceDisconnected device_disconnected = 4;
  }
}

message TargetUpdate {
  string device = 1;
}

enum DeviceRole {
  UNKNOWN = 0;
  CONTROLLER = 1;
  SIMULATOR = 2;
  SUBSCRIBER = 3;
}

message DeviceConnected {
  string device = 1;
  // Wrap this under the configuration udpate?
  DeviceRole role = 2;
}

message DeviceDisconnected {
  string device = 1;
}

//////////////////////
// Listen
//////////////////////

message SimulateRequest {
  string workspace = 1;
  string device = 2;
}

message SimulationEvent {
  UserInputEvent input_event = 1;
}

message UserInputEvent {
  oneof type {
    MouseMoveEvent mouse_move = 1;
    MouseButtonEvent mouse_button = 2;
    KeyboardEvent keyboard = 3;
    WheelEvent wheel = 4;
  }
}

message MouseMoveEvent {
  double delta_x = 1;
  double delta_y = 2;
}

message MouseButtonEvent {
  // ... details
}

message KeyboardEvent {
  // ... details
}

message WheelEvent {
  // ... details
  sint32 dx = 1;
  sint32 dy = 2;
}


// Subscriptions
message CancelSimulationRequest {
  string workspace = 1;
  string device = 2;
}

message CancelSimulationResponse {}

message CancelSubscriptionRequest {
  string workspace = 1;
  string device = 2;
}

message CancelSubscriptionResponse {}
