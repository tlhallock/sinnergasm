syntax = "proto3";

package sinnergasm;

service VirtualWorkspaces {
  rpc CreateWorkspace(CreateRequest) returns (CreatedResponse);
  rpc ListWorkspaces(ListRequest) returns (WorkspaceList);
  rpc GetWorkspace(GetRequest) returns (Workspace);
  rpc ConfigureWorkspace(ConfigurationRequest) returns (ConfiguredResponse);
  rpc DeleteWorkspace(DeleteRequest) returns (DeleteResponse);

  rpc JoinWorkspace(JoinRequest) returns (JoinResponse);
  rpc LeaveWorkspace(LeaveRequest) returns (LeaveResponse);
  rpc TargetDevice(TargetRequest) returns (TargetResponse);

  rpc ControlWorkspace(stream ControlRequest) returns (StreamControlled);

  rpc TransitionSubscription(TransitionRequest) returns (stream TransitionEvent);
  rpc ReplicationSubscription(ReplicationRequest) returns (stream ReplicationEvent);
}


//////////////////////
// Create
//////////////////////
message CreateRequest {
  string name = 1;
  string secret = 2;
}

message CreatedResponse {

}

//////////////////////
// List
//////////////////////
message ListRequest {
  string secret = 1;
}

message WorkspaceList {
  repeated WorkspaceSummary workspaces = 1;
}

message WorkspaceSummary {
  string name = 1;
  uint32 number_of_monitors = 2;
  uint32 devices = 3;
}

//////////////////////
// Get
//////////////////////
message GetRequest {
  string secret = 1;
}

message Workspace {
  string name = 1;
  string controller = 2;
  string target = 3;
  repeated Device devices = 4;
  repeated Monitor monitors = 5;
}

message Monitor {
  uint32 x = 1;
  uint32 y = 2;
  uint32 w = 3;
  uint32 h = 4;
  string device = 5;
}

message Device {
  string name = 1;
  string ip = 2;
}

//////////////////////
// Delete
//////////////////////

message DeleteRequest {
  string workspace = 1;
  string secret = 2;
}

message DeleteResponse {

}


//////////////////////
// Configure
//////////////////////

message ConfigurationRequest {

}

message ConfiguredResponse {

}

//////////////////////
// Target
//////////////////////

message TargetRequest {
  string workspace = 1;
  string secret = 2;
  string device = 3;
}

message TargetResponse {

}

//////////////////////
// Join
//////////////////////

message JoinRequest {
  string name = 1;
  string secret = 2;
  string device = 3;
  repeated string monitors = 4;
}

message JoinResponse {

}

//////////////////////
// Leave
//////////////////////

message LeaveRequest {
  string name = 1;
  string secret = 2;
  string device = 3;
}

message LeaveResponse {

}

//////////////////////
// Control
//////////////////////

message ControlRequest {
  // TODO: oneof where one is an
  UserInputEvent input_event = 1;
}

message StreamControlled {

}

message ControllerEvent {
  oneof event_type {
    ConfigurationUpdate configuration_update = 1;
    Terminate terminate = 2;
    Targetted targetted = 3;
  }
}

message Terminate {

}

message ConfigurationUpdate {
  Workspace workspace = 1;
}

message Targetted {
  string clipboard = 1;
}

//////////////////////
// Subscription
//////////////////////

message TransitionRequest {
  string workspace = 1;
  string secret = 2;
}

message TransitionEvent {
  oneof event_type {
    ConfigurationUpdate configuration_update = 1;
    Terminate terminate = 2;
    Targetted targetted = 3;
  }
}

//////////////////////
// Listen
//////////////////////

message ReplicationRequest {
  string workspace = 1;
  string secret = 2;
}

message ReplicationEvent {
  UserInputEvent input_event = 1;
}

message UserInputEvent {
  oneof type {
    MouseMoveEvent mouse_move = 1;
    MouseButtonEvent mouse_button = 2;
    KeyboardEvent keyboard = 3;
    WheelEvent wheel = 4;
  }
}

message MouseMoveEvent {
  uint32 x = 1;
  uint32 y = 2;
}

message MouseButtonEvent {
  // ... details
}

message KeyboardEvent {
  // ... details
}

message WheelEvent {
  // ... details
  sint32 dx = 1;
  sint32 dy = 2;
}
